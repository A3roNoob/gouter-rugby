/*CREATION DES TABLES SANS CLES ETRANGERES

CREATION DE LA TABLE RANG*/

CREATE OR REPLACE TABLE RANG
(
    idRang INT(2) AUTO_INCREMENT PRIMARY KEY,
    nomRang VARCHAR(30),

    CONSTRAINT PK_Rang PRIMARY KEY (idRang)
);

/*CREATION DE LA TABLE ADULTE*/

CREATE OR REPLACE TABLE ADULTE
(
    idAdulte INT(4) AUTO_INCREMENT,
    idRang INT(2) DEFAULT 3,
    nom VARCHAR(30),
    prenom VARCHAR(30),
    mail VARCHAR(30),
    tel VARCHAR(11),
    solde DECIMAL(6,2) DEFAULT 0,
    mdp VARCHAR(255),

    CONSTRAINT PK_Adulte PRIMARY KEY (idAdulte),
    CONSTRAINT FK_AdulteRang FOREIGN KEY (idRang) REFERENCES RANG(idRang)
);

/*CREATION DE LA TABLE ENFANT*/

CREATE OR REPLACE TABLE ENFANT
(
    idEnfant INT(4) AUTO_INCREMENT,
    nom VARCHAR(30),
    prenom VARCHAR(30),

    CONSTRAINT PK_Enfant PRIMARY KEY (idEnfant)
);

/*CREATION DE LA TABLE PRODUIT*/

CREATE OR REPLACE TABLE PRODUIT
(
    idProduit INT(4) AUTO_INCREMENT,
    nomProduit VARCHAR(30),
    descProduit VARCHAR(50),
    prix DECIMAL(6,2) DEFAULT 0,

    CONSTRAINT PK_Produit PRIMARY KEY (idProduit)
);

/*CREATION DE LA TABLE ALLERGENE*/

CREATE OR REPLACE TABLE ALLERGENE
(
    idAllergene INT(3) AUTO_INCREMENT,
    nomAllergene VARCHAR(30),
    descAllergene VARCHAR(50),

    CONSTRAINT PK_Allergene PRIMARY KEY (idAllergene)
);

/*CREATION DE LA TABLE CATEGORIEENFANT*/

CREATE OR REPLACE TABLE CATEGORIEENFANT
(
    idCat INT(2) AUTO_INCREMENT,
    nom VARCHAR(30),

    CONSTRAINT PK_CategorieEnfant PRIMARY KEY (idCat)
);

/*CREATION DE LA TABLE CATEGORIEPRODUIT*/

CREATE OR REPLACE TABLE CATEGORIEPRODUIT
(
    idCat INT(2) AUTO_INCREMENT,
    nom VARCHAR(30),

    CONSTRAINT PK_CategorieProduit PRIMARY KEY (idCat)
);

/* CREATION DES TABLES NECESSITANT DES CLES ETRANGERES 

CREATION DE LA TABLE PARENT*/

CREATE OR REPLACE TABLE PARENT
(
    idAdulte INT(4),
    idEnfant INT(4),

    CONSTRAINT PK_Parent PRIMARY KEY (idAdulte,idEnfant),
    CONSTRAINT FK_AdulteParent FOREIGN KEY(idAdulte) REFERENCES ADULTE(idAdulte),
    CONSTRAINT FK_EnfantParent FOREIGN KEY(idEnfant) REFERENCES ENFANT(idEnfant)
);

/*CREATION DE LA TABLE CATENFANT*/

CREATE OR REPLACE TABLE CATENFANT
(
    idEnfant INT(4),
    idCat INT(2),

    CONSTRAINT PK_CatEnfant PRIMARY KEY (idEnfant,idCat),
    CONSTRAINT FK_EnfantCat FOREIGN KEY(idEnfant) REFERENCES ENFANT(idEnfant),
    CONSTRAINT FK_CatCat FOREIGN KEY(idCat) REFERENCES CATEGORIEENFANT(idCat)
);

/*CREATION DE LA TABLE STOCK*/

CREATE OR REPLACE TABLE STOCK
(
    idProduit INT(4),
    quantite INT(4) DEFAULT 0,

    CONSTRAINT PK_Stock PRIMARY KEY (idProduit,quantite),
    CONSTRAINT FK_ProduitStock FOREIGN KEY (idProduit) REFERENCES PRODUIT(idProduit)
);

/*CREATION DE LA TABLE CONSOMMATION*/

CREATE OR REPLACE TABLE CONSOMMATION
(
    idConso INT(5) AUTO_INCREMENT,
    idEnfant INT(4),
    total DECIMAL(6,2),
    dateConso DATE,

    CONSTRAINT PK_Consommation PRIMARY KEY (idConso,idEnfant),
    CONSTRAINT FK_EnfantConso FOREIGN KEY (idEnfant) REFERENCES ENFANT(idEnfant)
);

/*CREATION DE LA TABLE DETAILCONSO*/

CREATE OR REPLACE TABLE DETAILCONSO
(
    idConso INT(5),
    idProduit INT(4),
    quantite INT(2) DEFAULT 0,

    CONSTRAINT PK_DetailConso PRIMARY KEY (idConso,idProduit),
    CONSTRAINT FK_ConsoDetailConso FOREIGN KEY (idConso) REFERENCES CONSOMMATION(idConso),
    CONSTRAINT FK_ProduitDetailConso FOREIGN KEY (idProduit) REFERENCES PRODUIT(idProduit)
);

/*CREATION DE LA TABLE ALLERGIEENFANT*/

CREATE OR REPLACE TABLE ALLERGIEENFANT
(
    idEnfant INT(4),
    idAllergene INT(3),

    CONSTRAINT PK_AllergieEnfant PRIMARY KEY (idEnfant,idAllergene),
    CONSTRAINT FK_EnfantAll_E FOREIGN KEY(idEnfant) REFERENCES ENFANT(idEnfant),
    CONSTRAINT FK_AllAll_E FOREIGN KEY(idAllergene) REFERENCES ALLERGENE(idAllergene)
);

/*CREATION DE LA TABLE ALLERGIEPRODUIT*/

CREATE OR REPLACE TABLE ALLERGIEPRODUIT
(
    idProduit INT(4),
    idAllergene INT(3),

    CONSTRAINT PK_AllergieProduit PRIMARY KEY (idProduit,idAllergene),
    CONSTRAINT FK_ProduitAll_P FOREIGN KEY(idProduit) REFERENCES PRODUIT(idProduit),
    CONSTRAINT FK_AllAllE FOREIGN KEY(idAllergene) REFERENCES ALLERGENE(idAllergene)
);

/*CREATION DE LA TABLE COMPTE*/

CREATE OR REPLACE TABLE COMPTE
(
    idEnfant INT(4),
    solde DECIMAL(6,2),

    CONSTRAINT PK_Compte PRIMARY KEY (idEnfant),
    CONSTRAINT FK_EnfantCompte FOREIGN KEY (idEnfant) REFERENCES ENFANT(idEnfant)
);

/*CREATION DE LA TABLE CATPRODUIT*/

CREATE OR REPLACE TABLE CATPRODUIT
(
    idProduit INT(4),
    idCat INT(2),

    CONSTRAINT PK_CatProduit PRIMARY KEY (idProduit, idCat),
    CONSTRAINT FK_ProduitCatProduit FOREIGN KEY (idProduit) REFERENCES PRODUIT(idProduit),
    CONSTRAINT FK_CatCatProduit FOREIGN KEY (idCat) REFERENCES CATEGORIEPRODUIT(idCat)
);

/*CREATION DE LA TABLE COURSE*/

CREATE OR REPLACE TABLE COURSE
(
    idCourse INT(4) AUTO_INCREMENT,
    idAdulte INT(4),
    total DECIMAL(6,2) DEFAULT 0,
    dateCourse DATE,

    CONSTRAINT PK_Course PRIMARY KEY(idCourse,idAdulte),
    CONSTRAINT FK_AdulteCourse FOREIGN KEY (idAdulte) REFERENCES ADULTE(idAdulte)
);

/*CREATION DE LA TABLE COURSEDETAIL*/

CREATE OR REPLACE TABLE DETAILCOURSE
(
    idCourse INT(4),
    idProduit INT(4),
    quantite INT(3),

    CONSTRAINT PK_DetailCourse PRIMARY KEY (idCourse,idProduit),
    CONSTRAINT FK_ProduitDetailCourse FOREIGN KEY (idProduit) REFERENCES COURSE(idCourse)
);

/*CREATION De LA TABLE OPERATIONSOLDE*/

CREATE OR REPLACE TABLE OPERATIONSOLDE
(
    idOperation INT(5) PRIMARY KEY AUTO_INCREMENT,
    idAdulte INT(4),
    idEnfant INT(4),
    montant DECIMAL(6,2),
    dateOpe DATE,

    CONSTRAINT FK_AdulteOperation FOREIGN KEY (idAdulte) REFERENCES ADULTE(idAdulte),
    CONSTRAINT FK_EnfantOperation FOREIGN KEY (idEnfant) REFERENCES ENFANT(idEnfant)
);

CREATE OR REPLACE TABLE CONNEXION
(
  idAdulte INT(4) PRIMARY KEY,
  token VARCHAR(64) DEFAULT NULL,
  CONSTRAINT FK_CONNEXION FOREIGN KEY (idAdulte) REFERENCES ADULTE(idAdulte)
);